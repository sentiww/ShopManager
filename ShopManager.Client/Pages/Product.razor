@page "/products/{IdBase64}"
@attribute [Authorize]
@using ShopManager.Client.Common
@using ShopManager.Client.Dtos
@using ShopManager.Client.Services
@using Microsoft.AspNetCore.Authorization
<MudContainer>
    <h3>Product</h3>
    @if (ProductDetails is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl>
            <dt>Id</dt>
            <dd>@ProductDetails.Id</dd>
            <dt>Name</dt>
            <dd>@ProductDetails.Name</dd>
            <dt>Description</dt>
            <dd>@ProductDetails.Description</dd>
            <dt>Price</dt>
            <dd>@ProductDetails.Price</dd>
            <dt>Quantity</dt>
            <dd>@ProductDetails.Quantity</dd>
        </dl>
    }
    </MudContainer>
@code {
    [Parameter]
    public string IdBase64 { get; set; }
    [Inject]
    private IProductService ProductService { get; set; } = null!;
    private Guid Id { get; set; }
    private ProductDetailsDto ProductDetails { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Id = GuidHelper.FromBase64String(IdBase64);
        ProductDetails = await ProductService.GetProductAsync(Id);
        await base.OnInitializedAsync();
    }

}