@using ShopManager.Client.Validators
@using ShopManager.Client.Models
<MudDialog Options="@_options">
    <DialogContent>
        <MudForm Model="@_model" 
                 @ref="_form"
                 Validation="@_validator.ValidateValue"
                 ValidationDelay="0">
            <MudTextField @bind-Value="@_model.Name"
                          For="@(() => _model.Name)"
                          Immediate="true"
                          Label="Name"/>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" 
                   Variant="Variant.Outlined" 
                   OnClick="@Cancel">
            Cancel
        </MudButton>
        <MudSpacer/>
        <MudButton Color="Color.Primary" 
                   Variant="Variant.Filled" 
                   OnClick="@AddCollection">
            Add
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance Dialog { get; set; } = null!;
    private readonly DialogOptions _options = new ()
    {
        CloseButton = true,
        DisableBackdropClick = true,
        FullWidth = true,
        MaxWidth = MaxWidth.Small,
        FullScreen = false,
        Position = DialogPosition.Center
    };
    private readonly AddCollectionModelValidator _validator = new();
    private MudForm _form = null!;
    private readonly AddCollectionModel _model = new()
    {
        Name = string.Empty,
    };
    
    private void Cancel()
    {
        Dialog.Cancel();
    }
    
    private void AddCollection()
    {
        _form.Validate();
        
        if (!_validator.Validate(_model).IsValid)
        {
            return;
        }
        
        Dialog.Close(DialogResult.Ok(_model.ToRequest()));
    }
}